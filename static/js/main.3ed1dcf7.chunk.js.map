{"version":3,"sources":["components/calculateWinner.component.jsx","components/square.component.jsx","components/board.component.jsx","components/header.component.jsx","components/players.component.jsx","components/game.component.jsx","index.js"],"names":["calculateWinner","squares","lines","i","length","a","b","c","Square","props","Button","outline","color","style","height","padding","width","fontWeight","fontSize","className","onClick","value","Board","renderSquare","ButtonGroup","Header","Jumbotron","fluid","Container","Row","Col","href","role","PlayerNames","playerX","playerO","handleChange","Label","Input","name","placeholder","onChange","Game","state","history","Array","fill","xIsNext","stepNumber","bind","e","target","this","setState","slice","concat","step","console","log","status","current","winner","moves","map","move","desc","margin","block","key","jumpTo","paddingBottom","xs","size","offset","md","handleClick","marginBottom","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3ed1dcf7.chunk.js","sourcesContent":["\r\nconst calculateWinner = (squares) => {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b]\r\n      && squares[a] === squares[c]) {\r\n      return (squares[a]);\r\n    }\r\n  }\r\n  return null;\r\n};\r\n\r\nexport default calculateWinner;","import React from 'react';\r\nimport { Button } from 'reactstrap';\r\n\r\n// Component -1: This component renders a single button\r\nconst Square = (props) => {\r\n  return (\r\n    <Button outline color='primary' style={{\r\n      height: '3em',\r\n      padding: '10px',\r\n      width: '3em',\r\n      //border: '1px solid black ',\r\n      fontWeight: 'bold',\r\n      fontSize: '4vw',\r\n      color: 'black'\r\n    }}\r\n      className=\"square\"\r\n      onClick={() => props.onClick()}>\r\n      {props.value}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default Square;","import React from 'react';\r\nimport Square from './square.component';\r\nimport { ButtonGroup } from 'reactstrap';\r\n\r\n// Component -2: This renders 9 squares\r\nconst Board = (props) => {\r\n\r\n  function renderSquare(i) {\r\n    return <Square value={props.squares[i]}\r\n      onClick={() => props.onClick(i)} />;\r\n  }\r\n\r\n  return (\r\n    <div >\r\n      <ButtonGroup >\r\n        {renderSquare(0)}\r\n        {renderSquare(1)}\r\n        {renderSquare(2)}\r\n      </ButtonGroup>\r\n      <ButtonGroup >\r\n        {renderSquare(3)}\r\n        {renderSquare(4)}\r\n        {renderSquare(5)}\r\n      </ButtonGroup>\r\n      <ButtonGroup >\r\n        {renderSquare(6)}\r\n        {renderSquare(7)}\r\n        {renderSquare(8)}\r\n      </ButtonGroup>\r\n    </div >\r\n  );\r\n};\r\n\r\nexport default Board;","import React from 'react';\r\nimport { Jumbotron, Container, Row, Col } from 'reactstrap';\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <div>\r\n      <Jumbotron fluid >\r\n        <Container>\r\n          <h1 className=\"display-3\">Tic Tac Toe !</h1>\r\n          <Row>\r\n            <Col>\r\n              <p className=\"lead\">This is a simple game in which there is a 3X3 matrix and players fill it with 'X' or 'O', now as soon as any one symbol alligns along a row, column or diagonal, the player with that symbol wins</p>\r\n            </Col>\r\n            <Col>\r\n              <p>This game has a unique feature of time travel, player can revert to the previous steps and then change its move, if the matrox is completely filled and nobody wins, then it is considered as draw</p>\r\n              <p className=\"lead\">\r\n                <a href='https://en.wikipedia.org/wiki/Tic-tac-toe' className='btn btn-primary' role='button' >Learn More</a>\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Jumbotron>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Input, Label } from 'reactstrap';\r\n\r\nconst PlayerNames = ({ playerX, playerO, handleChange }) => {\r\n  return (\r\n    <div>\r\n      <Label>Player for X: {playerX}</Label>\r\n      <Input name=\"playerX\" placeholder='Name of Player X' onChange={handleChange} />\r\n      <Label>Player for O: {playerO}</Label>\r\n      <Input name=\"playerO\" placeholder='Name of Player O' onChange={handleChange} />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default PlayerNames;","import React from 'react';\r\nimport calculateWinner from './calculateWinner.component';\r\nimport Board from './board.component';\r\nimport Header from './header.component';\r\nimport { Button, Container, Row, Col, Label } from 'reactstrap';\r\nimport PlayerNames from './players.component';\r\n\r\n// Component -3: Render a board with placeholder values\r\n/*\r\nThis is the parent component which holds the states of the game for the \r\ntime travel as well as the player turn\r\n*/\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [{\r\n        squares: Array(9).fill(null),\r\n      }],\r\n      xIsNext: true,\r\n      stepNumber: 0,\r\n      playerX: 'X',\r\n      playerO: 'O'\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(e) {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  handleClick(i) {\r\n    const history = this.state.history.slice(0,\r\n      this.state.stepNumber + 1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    if (calculateWinner(squares) || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n    //console.log(\"Squares array in handleclick\", squares);\r\n    this.setState({\r\n      history: history.concat([{\r\n        squares: squares\r\n      }]),\r\n      xIsNext: !this.state.xIsNext,\r\n      stepNumber: history.length\r\n    });\r\n  }\r\n\r\n  jumpTo(step) {\r\n    console.log(\"Jumped to move number \", step);\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext: (step % 2) === 0,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n    const moves = history.map((step, move) => {\r\n      const desc = move ?\r\n        'Go to move #' + move :\r\n        'Go to Game start';\r\n\r\n      // This is the return function for the game info time travel buttons \r\n      return (\r\n        <Button style={{ margin: '5px' }} block color='success' key={move} onClick={() => this.jumpTo(move)}>\r\n          {desc}\r\n        </Button>\r\n      );\r\n    });\r\n    //console.log(this.state.playerO, this.state.playerX);\r\n    let status;\r\n    if (winner) {\r\n      if (winner === 'O')\r\n        status = 'Winner is : ' + this.state.playerO;\r\n      else\r\n        status = 'Winner is : ' + this.state.playerX;\r\n    }\r\n    else if (this.state.history.length === 10 && !winner) {\r\n      status = 'This match is draw';\r\n    }\r\n    else {\r\n      status = 'Next Player: ' + (this.state.xIsNext ? this.state.playerX : this.state.playerO);\r\n    }\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <Container style={{ paddingBottom: '25px' }}>\r\n          <Row>\r\n            <Col xs={{ size: 6, offset: 3 }} md={{ size: 6, offset: 0 }}>\r\n              <Board\r\n                squares={current.squares}\r\n                onClick={(i) => this.handleClick(i)} />\r\n            </Col>\r\n            <Col xs=\"12\" md=\"6\" >\r\n              <h3 style={{ marginBottom: '20px' }}>{status}</h3>\r\n              <Row>\r\n                <Col>\r\n                  <PlayerNames playerX={this.state.playerX} playerO={this.state.playerO} handleChange={this.handleChange} />\r\n                </Col>\r\n                <Col>{moves}</Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n//import './index.css';\r\nimport Game from './components/game.component';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}